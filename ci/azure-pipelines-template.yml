jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable

  steps:
  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install Rust

  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust (Windows)

  - script: cargo build -p pyoxidizer
    displayName: Build

  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        cargo run --bin pyoxidizer -- init --pip-install markupsafe --pip-install simplejson --pip-install gevent ~/pyapp
        cat ci/pyapp.py | cargo run --bin pyoxidizer -- run ~/pyapp
      displayName: Build Oxidized Application

  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        set PIP_VERBOSE=1
        cargo run --bin pyoxidizer -- init --pip-install markupsafe --pip-install simplejson --pip-install gevent %HOME%/pyapp
        cat ci/pyapp.py | cargo run --bin pyoxidizer -- run %HOME%/pyapp
      displayName: Build Oxidized Application (Windows)
